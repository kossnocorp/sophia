# JavaScript

layers:
  runtime:
    control:
      # export *default* ...
      - keyword.control.default
      # *async* function ...
      - storage.modifier.async
      # class ... *extends* ...
      - meta.class storage.modifier
      # *try* { ... } *catch* { ... }
      - keyword.control.trycatch
      # function*** () { ...
      - keyword.generator.asterisk

    effect:
      # new *Promise*(...)
      - meta.function-call support.class
      # *super*(...)
      - meta.function-call variable.language.super
      # *sql*`...`
      - entity.name.function.tagged-template

    access:
      # *arguments*
      - variable.language.arguments

  data:
    primitive:

    detail:
      # const hello = *{* ... *}*
      - meta.objectliteral punctuation.definition.block
      # { hello*:* ... }
      - punctuation.separator.key-value
      # { hello: ...*,* ... }
      - meta.objectliteral punctuation.separator.comma
      # *[*1, 2...*]*
      - meta.array.literal meta.brace.square
      # [1*,* 2...]
      - meta.array.literal punctuation.separator.comma
      # *`*...`*
      - punctuation.definition.string.template.begin
      - punctuation.definition.string.template.end
